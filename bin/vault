#!/usr/bin/env bash
set -eo pipefail

if [ -L $0 ]; then
    ROOT=$(cd $(dirname $(readlink -e $0))/..; pwd)
else
    ROOT=$(cd $(dirname $0)/..; pwd)
fi

if ! hash ansible-vault 2>/dev/null; then
    echo "Failed to detect ansible-vault!"
    exit 1
fi

if test -f ${ROOT}/.vaultpasswd; then
    VAULT_PASSWORD_FILE=${ROOT}/.vaultpasswd
else
    if test -z "${ANSIBLE_VAULT_PASSWORD}"; then
        echo "Missing ANSIBLE_VAULT_PASSWORD!"
        exit 2
    fi

    VAULT_PASSWORD_FILE=$(mktemp)
    echo ${ANSIBLE_VAULT_PASSWORD} >| ${VAULT_PASSWORD_FILE}
fi

if [[ $# -ne 2 ]]; then
    echo "Usage: ${0} view|edit|encrypt|decrypt|string <file|string>"
    exit 1
fi

pushd ${ROOT} >/dev/null
    ACTION=${1}
    shift

    case "${ACTION}" in
        "view")
            ansible-vault view --vault-password-file ${VAULT_PASSWORD_FILE} "$@"
            ;;
        "edit")
            ansible-vault edit --vault-password-file ${VAULT_PASSWORD_FILE} "$@"
            ;;
        "encrypt")
            ansible-vault encrypt --vault-password-file ${VAULT_PASSWORD_FILE} "$@"
            ;;
        "decrypt")
            ansible-vault decrypt --vault-password-file ${VAULT_PASSWORD_FILE} "$@"
            ;;
        "string")
            echo -n "${1}" | ansible-vault encrypt_string --vault-password-file ${VAULT_PASSWORD_FILE}
            ;;
        *)
            echo "Usage: ${0} view|edit|encrypt|decrypt|string <file|string>"
            exit 1
    esac
popd >/dev/null
